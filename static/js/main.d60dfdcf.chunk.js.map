{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","visibleTodos","maxTodoId","Math","max","App","useState","setTitle","isTitleCorrect","setIsTitleCorrect","setUserId","isUserCorrect","setIsUserCorrect","action","method","onSubmit","event","preventDefault","newTodo","push","getTodo","htmlFor","type","placeholder","value","onChange","initialValue","target","match","split","slice","length","join","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d60dfdcf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './UserInfo.scss';\nimport { User } from '../../types/User';\n\n// export const UserInfo = () => {};\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './TodoInfo.scss';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n// import { event } from 'cypress/types/jquery';\n\nconst getUser = (userId: number): User | null => usersFromServer\n  .find(user => user.id === userId) || null;\n\nconst visibleTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet maxTodoId = Math.max(...visibleTodos.map(todo => todo.id));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [userId, setUserId] = useState(0);\n  const [isUserCorrect, setIsUserCorrect] = useState(true);\n\n  const getTodo = (): void => {\n    maxTodoId += 1;\n\n    const newTodo: Todo = {\n      id: maxTodoId,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsTitleCorrect(false);\n    }\n\n    if (!userId) {\n      setIsUserCorrect(false);\n    }\n\n    if (!userId || !title) {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }\n\n    getTodo();\n\n    setIsTitleCorrect(true);\n    setIsUserCorrect(true);\n    setUserId(0);\n    setTitle('');\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const initialValue = event.target.value;\n\n    const value = (\n      initialValue.match(/^[а-яА-ЯёЁіІїЇa-zA-Z0-9\\s]+$/)\n      || [...initialValue\n        .split('')\n        .slice(0, initialValue.length - 1)]\n    ).join('');\n\n    setTitle(value);\n    setIsTitleCorrect(true);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setIsUserCorrect(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"titleInput\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {isTitleCorrect\n            || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ name, id }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n\n          {isUserCorrect || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}